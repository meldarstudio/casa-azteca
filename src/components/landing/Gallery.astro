---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

const photos = Object.values(
  import.meta.glob<{ default: ImageMetadata }>("/src/assets/photos/*.webp", {
    eager: true,
  }),
);
---

<section class="bg-white">
  <image-gallery>
    <div class="mx-auto max-w-6xl px-4 py-24 sm:px-8">
      <h2 class="mb-8 text-3xl font-bold tracking-tight text-black md:text-4xl">
        Gallery
      </h2>
      <ul
        class="grid gap-4 sm:grid-cols-2 sm:gap-2 lg:grid-cols-4"
        id="gallery"
      >
        {
          photos.map((photo, i) => (
            <li
              class:list={{
                "sm:col-span-2 sm:row-span-2": i === 0,
              }}
              class="overflow-hidden rounded-md sm:aspect-square"
            >
              <a
                href={photo.default.src}
                data-cropped="true"
                data-pswp-width={photo.default.width}
                data-pswp-height={photo.default.height}
                target="_blank"
              >
                <Image
                  src={photo.default}
                  class="object-fit h-full w-full transition-all hover:brightness-75 sm:object-cover"
                  alt="Food on the table"
                  layout="constrained"
                  sizes={
                    i === 0
                      ? "(max-width: 1024px) 100vw, (max-width: 1152px) 50vw, 576px"
                      : "(max-width: 640px) 100vw, (max-width: 1024px) 50vw, (max-width: 1152px) 25vw, 288px"
                  }
                />
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </image-gallery>
</section>
<script>
  import PhotoSwipeLightbox from "photoswipe/lightbox";
  import "photoswipe/style.css";

  class ImageGallery extends HTMLElement {
    lightbox: PhotoSwipeLightbox | null = null;

    private onIdle = (cb: IdleRequestCallback) =>
      (window.requestIdleCallback || ((cb) => setTimeout(cb, 1)))(cb);

    constructor() {
      super();
      this.onIdle(() => this.init());
    }

    private init = (): void => {
      this.lightbox = new PhotoSwipeLightbox({
        gallery: "#gallery",
        children: "a",
        pswpModule: () => import("photoswipe"),
      });
      this.lightbox.init();
    };

    disconnectedCallback() {
      if (this.lightbox) {
        this.lightbox.destroy();
        this.lightbox = null;
      }
    }
  }

  customElements.define("image-gallery", ImageGallery);
</script>
